name: Daily Script Release

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 00:00 (北京时间 08:00)
  workflow_dispatch:
  push:
    paths:
      - 'install-ss.sh'
      - 'uninstall-ss.sh'

jobs:
  release-scripts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整提交历史

      - name: Get Release Version
        id: release-version
        run: |
          # 使用日期+时间戳确保唯一性
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          echo "RELEASE_VERSION=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "RELEASE_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT

      - name: Prepare Release Assets
        run: |
          # 创建包含脚本的文件夹
          mkdir -p scripts-release
          cp install-ss.sh scripts-release/
          cp uninstall-ss.sh scripts-release/
          
          # 添加版本文件
          echo "Release Version: ${{ steps.release-version.outputs.RELEASE_VERSION }}" > scripts-release/version.txt
          echo "Build Date: ${{ steps.release-version.outputs.RELEASE_DATE }}" >> scripts-release/version.txt
          echo "Repository: ${{ github.repository }}" >> scripts-release/version.txt
          
          # 创建压缩包
          tar -czvf scripts-${{ steps.release-version.outputs.RELEASE_VERSION }}.tar.gz scripts-release/*

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          # 使用唯一时间戳作为标签
          tag_name: release-${{ steps.release-version.outputs.RELEASE_VERSION }}
          name: "Script Release ${{ steps.release-version.outputs.RELEASE_VERSION }}"
          body: |
            ### 自动发布的脚本
            
            包含以下脚本：
            - `install-ss.sh`
            - `uninstall-ss.sh`
            
            版本: ${{ steps.release-version.outputs.RELEASE_VERSION }}
            发布日期: ${{ steps.release-version.outputs.RELEASE_DATE }}
          files: |
            scripts-${{ steps.release-version.outputs.RELEASE_VERSION }}.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 可选：清理旧版本（保留最近5个）
      - name: Cleanup Old Releases
        uses: dev-drprasad/delete-old-releases@v0.2.0
        with:
          keep_latest: 5
          delete_tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
